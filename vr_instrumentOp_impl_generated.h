// Generated by './generateInstrumentOp_impl.py'
if(vr.roundingMode==VR_NEAREST ||  vr.roundingMode==VR_NATIVE){
#define bcName(OP) "vr_verrou_NEAREST"#OP, vr_verrou_NEAREST##OP
#define bcNameWithCC(OP) "vr_verrou_NEAREST"#OP, vr_verrou_NEAREST##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
}
if(vr.roundingMode==VR_RANDOM){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_RANDOM_soft"#OP, vr_verrou_RANDOM_soft##OP
#define bcNameWithCC(OP) "vr_verrou_RANDOM_soft"#OP, vr_verrou_RANDOM_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_RANDOM"#OP, vr_verrou_RANDOM##OP
#define bcNameWithCC(OP) "vr_verrou_RANDOM"#OP, vr_verrou_RANDOM##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_AVERAGE){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_AVERAGE_soft"#OP, vr_verrou_AVERAGE_soft##OP
#define bcNameWithCC(OP) "vr_verrou_AVERAGE_soft"#OP, vr_verrou_AVERAGE_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_AVERAGE"#OP, vr_verrou_AVERAGE##OP
#define bcNameWithCC(OP) "vr_verrou_AVERAGE"#OP, vr_verrou_AVERAGE##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_RANDOM_DET){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_RANDOM_DET_soft"#OP, vr_verrou_RANDOM_DET_soft##OP
#define bcNameWithCC(OP) "vr_verrou_RANDOM_DET_soft"#OP, vr_verrou_RANDOM_DET_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_RANDOM_DET"#OP, vr_verrou_RANDOM_DET##OP
#define bcNameWithCC(OP) "vr_verrou_RANDOM_DET"#OP, vr_verrou_RANDOM_DET##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_AVERAGE_DET){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_AVERAGE_DET_soft"#OP, vr_verrou_AVERAGE_DET_soft##OP
#define bcNameWithCC(OP) "vr_verrou_AVERAGE_DET_soft"#OP, vr_verrou_AVERAGE_DET_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_AVERAGE_DET"#OP, vr_verrou_AVERAGE_DET##OP
#define bcNameWithCC(OP) "vr_verrou_AVERAGE_DET"#OP, vr_verrou_AVERAGE_DET##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_RANDOM_COMDET){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_RANDOM_COMDET_soft"#OP, vr_verrou_RANDOM_COMDET_soft##OP
#define bcNameWithCC(OP) "vr_verrou_RANDOM_COMDET_soft"#OP, vr_verrou_RANDOM_COMDET_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_RANDOM_COMDET"#OP, vr_verrou_RANDOM_COMDET##OP
#define bcNameWithCC(OP) "vr_verrou_RANDOM_COMDET"#OP, vr_verrou_RANDOM_COMDET##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_AVERAGE_COMDET){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_AVERAGE_COMDET_soft"#OP, vr_verrou_AVERAGE_COMDET_soft##OP
#define bcNameWithCC(OP) "vr_verrou_AVERAGE_COMDET_soft"#OP, vr_verrou_AVERAGE_COMDET_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_AVERAGE_COMDET"#OP, vr_verrou_AVERAGE_COMDET##OP
#define bcNameWithCC(OP) "vr_verrou_AVERAGE_COMDET"#OP, vr_verrou_AVERAGE_COMDET##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_RANDOM_SCOMDET){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_RANDOM_SCOMDET_soft"#OP, vr_verrou_RANDOM_SCOMDET_soft##OP
#define bcNameWithCC(OP) "vr_verrou_RANDOM_SCOMDET_soft"#OP, vr_verrou_RANDOM_SCOMDET_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_RANDOM_SCOMDET"#OP, vr_verrou_RANDOM_SCOMDET##OP
#define bcNameWithCC(OP) "vr_verrou_RANDOM_SCOMDET"#OP, vr_verrou_RANDOM_SCOMDET##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_AVERAGE_SCOMDET){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_AVERAGE_SCOMDET_soft"#OP, vr_verrou_AVERAGE_SCOMDET_soft##OP
#define bcNameWithCC(OP) "vr_verrou_AVERAGE_SCOMDET_soft"#OP, vr_verrou_AVERAGE_SCOMDET_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_AVERAGE_SCOMDET"#OP, vr_verrou_AVERAGE_SCOMDET##OP
#define bcNameWithCC(OP) "vr_verrou_AVERAGE_SCOMDET"#OP, vr_verrou_AVERAGE_SCOMDET##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_SR_MONOTONIC){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_SR_MONOTONIC_soft"#OP, vr_verrou_SR_MONOTONIC_soft##OP
#define bcNameWithCC(OP) "vr_verrou_SR_MONOTONIC_soft"#OP, vr_verrou_SR_MONOTONIC_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_SR_MONOTONIC"#OP, vr_verrou_SR_MONOTONIC##OP
#define bcNameWithCC(OP) "vr_verrou_SR_MONOTONIC"#OP, vr_verrou_SR_MONOTONIC##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_SR_SMONOTONIC){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_SR_SMONOTONIC_soft"#OP, vr_verrou_SR_SMONOTONIC_soft##OP
#define bcNameWithCC(OP) "vr_verrou_SR_SMONOTONIC_soft"#OP, vr_verrou_SR_SMONOTONIC_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_SR_SMONOTONIC"#OP, vr_verrou_SR_SMONOTONIC##OP
#define bcNameWithCC(OP) "vr_verrou_SR_SMONOTONIC"#OP, vr_verrou_SR_SMONOTONIC##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_UPWARD){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_UPWARD_soft"#OP, vr_verrou_UPWARD_soft##OP
#define bcNameWithCC(OP) "vr_verrou_UPWARD_soft"#OP, vr_verrou_UPWARD_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_UPWARD"#OP, vr_verrou_UPWARD##OP
#define bcNameWithCC(OP) "vr_verrou_UPWARD"#OP, vr_verrou_UPWARD##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_DOWNWARD){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_DOWNWARD_soft"#OP, vr_verrou_DOWNWARD_soft##OP
#define bcNameWithCC(OP) "vr_verrou_DOWNWARD_soft"#OP, vr_verrou_DOWNWARD_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_DOWNWARD"#OP, vr_verrou_DOWNWARD##OP
#define bcNameWithCC(OP) "vr_verrou_DOWNWARD"#OP, vr_verrou_DOWNWARD##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_ZERO){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_ZERO_soft"#OP, vr_verrou_ZERO_soft##OP
#define bcNameWithCC(OP) "vr_verrou_ZERO_soft"#OP, vr_verrou_ZERO_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_ZERO"#OP, vr_verrou_ZERO##OP
#define bcNameWithCC(OP) "vr_verrou_ZERO"#OP, vr_verrou_ZERO##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_AWAY_ZERO){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_AWAY_ZERO_soft"#OP, vr_verrou_AWAY_ZERO_soft##OP
#define bcNameWithCC(OP) "vr_verrou_AWAY_ZERO_soft"#OP, vr_verrou_AWAY_ZERO_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_AWAY_ZERO"#OP, vr_verrou_AWAY_ZERO##OP
#define bcNameWithCC(OP) "vr_verrou_AWAY_ZERO"#OP, vr_verrou_AWAY_ZERO##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_FARTHEST){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_FARTHEST_soft"#OP, vr_verrou_FARTHEST_soft##OP
#define bcNameWithCC(OP) "vr_verrou_FARTHEST_soft"#OP, vr_verrou_FARTHEST_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_FARTHEST"#OP, vr_verrou_FARTHEST##OP
#define bcNameWithCC(OP) "vr_verrou_FARTHEST"#OP, vr_verrou_FARTHEST##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_PRANDOM){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_PRANDOM_soft"#OP, vr_verrou_PRANDOM_soft##OP
#define bcNameWithCC(OP) "vr_verrou_PRANDOM_soft"#OP, vr_verrou_PRANDOM_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_PRANDOM"#OP, vr_verrou_PRANDOM##OP
#define bcNameWithCC(OP) "vr_verrou_PRANDOM"#OP, vr_verrou_PRANDOM##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_PRANDOM_DET){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_PRANDOM_DET_soft"#OP, vr_verrou_PRANDOM_DET_soft##OP
#define bcNameWithCC(OP) "vr_verrou_PRANDOM_DET_soft"#OP, vr_verrou_PRANDOM_DET_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_PRANDOM_DET"#OP, vr_verrou_PRANDOM_DET##OP
#define bcNameWithCC(OP) "vr_verrou_PRANDOM_DET"#OP, vr_verrou_PRANDOM_DET##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
if(vr.roundingMode==VR_PRANDOM_COMDET){
	if(vr.instrument_soft_used){
#define bcName(OP) "vr_verrou_PRANDOM_COMDET_soft"#OP, vr_verrou_PRANDOM_COMDET_soft##OP
#define bcNameWithCC(OP) "vr_verrou_PRANDOM_COMDET_soft"#OP, vr_verrou_PRANDOM_COMDET_soft##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}else{
#define bcName(OP) "vr_verrou_PRANDOM_COMDET"#OP, vr_verrou_PRANDOM_COMDET##OP
#define bcNameWithCC(OP) "vr_verrou_PRANDOM_COMDET"#OP, vr_verrou_PRANDOM_COMDET##OP
#include "vr_instrumentOp_impl.h"
#undef bcName
#undef bcNameWithCC
	}
}
